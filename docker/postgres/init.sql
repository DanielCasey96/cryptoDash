-- Enable pgcrypto for UUID generation
CREATE EXTENSION IF NOT EXISTS pgcrypto;

-- Create users table
CREATE TABLE users (
                       id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
                       username varchar(50) NOT NULL,
                       password varchar(100) NOT NULL,
                       email varchar(100) NOT NULL,
                       created_at timestamp DEFAULT CURRENT_TIMESTAMP,
                       last_login timestamp
);

-- Insert a base user with a hardcoded UUID
INSERT INTO users (id, username, password, email)
VALUES ('11111111-1111-1111-1111-111111111111', 'testuser', 'testpassword', 'testuser@example.com');

-- Create crypto table
CREATE TABLE crypto (
                        id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                        user_id uuid NOT NULL,
                        name varchar(100) NOT NULL,
                        type varchar(50) NOT NULL,
                        provider varchar(100) NOT NULL,
                        category varchar(50),
                        value numeric(12,2) NOT NULL,
                        updated_at timestamp,
                        CONSTRAINT crypto_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Seed multiple crypto rows for the hardcoded test user
INSERT INTO crypto (user_id, name, type, provider, category, value, updated_at)
VALUES
    ('11111111-1111-1111-1111-111111111111', 'Bitcoin',  'coin', 'Coinbase', 'currency', 10000.00, CURRENT_TIMESTAMP),
    ('11111111-1111-1111-1111-111111111111', 'Ethereum', 'coin', 'Binance',  'currency',  2500.00, CURRENT_TIMESTAMP),
    ('11111111-1111-1111-1111-111111111111', 'Cardano',  'coin', 'Kraken',   'currency',     0.45, CURRENT_TIMESTAMP);

